var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.251,1,1.463]],["body/modules/AppModule.html",[0,1.933,1,2.597,2,1.274,3,1.274,4,1.76,5,1.76,6,1.274,7,2.364,8,1.76,9,2.121,10,2.121,11,2.221,12,0.058,13,2.364,14,1.76,15,1.76,16,0.687,17,0.579,18,0.579,19,2.67,20,2.85,21,1.114,22,1.094,23,2.67,24,2.121,25,1.76,26,1.76,27,2.67,28,2.67,29,0.687,30,0.093,31,0.03,32,0.041,33,0.03]],["title/classes/CreateTaskDto.html",[30,0.092,34,1.251]],["body/classes/CreateTaskDto.html",[12,0.055,16,0.76,17,0.641,18,0.641,21,0.76,29,0.76,30,0.134,31,0.034,32,0.043,33,0.034,34,1.831,35,1.212,36,3.385,37,2.348,38,0.641,39,1.831,40,2.141,41,2.529,42,1.159,43,1.831,44,2.141,45,3.712,46,1.573,47,2.956,48,2.956,49,1.948,50,2.956,51,2.956]],["title/classes/GetTasksFilterDto.html",[30,0.092,52,1.251]],["body/classes/GetTasksFilterDto.html",[12,0.057,16,0.69,17,0.582,18,0.582,21,0.926,29,0.69,30,0.126,31,0.03,32,0.041,33,0.03,35,1.1,38,0.582,39,1.718,42,1.087,43,1.718,44,2.009,45,2.861,46,1.476,49,1.769,52,1.718,53,3.228,54,2.267,55,2.133,56,3.228,57,1.665,58,2.685,59,2.685,60,1.665,61,2.685,62,2.685,63,1.281,64,4.063,65,2.685,66,2.685]],["title/classes/Task.html",[30,0.092,67,1.075]],["body/classes/Task.html",[12,0.057,16,0.617,17,0.52,18,0.52,21,0.858,29,0.617,30,0.084,31,0.027,32,0.038,33,0.027,35,0.984,38,0.52,39,1.591,40,2.139,41,2.526,42,1.251,43,1.977,44,2.311,46,1.698,57,1.367,60,1.367,63,1.145,67,1.367,68,1.906,69,2.65,70,3.833,71,2.526,72,4.623,73,2.4,74,3.335,75,3.833,76,2.4,77,2.4,78,2.4,79,3.335,80,1.581,81,2.4]],["title/classes/TaskRepository.html",[30,0.092,82,1.463]],["body/classes/TaskRepository.html",[12,0.057,16,0.857,17,0.723,18,0.723,21,1.065,29,0.857,30,0.117,31,0.038,32,0.047,33,0.038,35,1.366,67,1.366,69,3.289,80,2.196,82,2.31,83,2.647,84,3.289,85,3.332,86,3.332,87,3.332]],["title/classes/TaskStatusValidationPipe.html",[30,0.092,88,1.463]],["body/classes/TaskStatusValidationPipe.html",[12,0.058,16,0.53,17,0.447,18,0.447,21,0.77,22,0.845,29,0.53,30,0.072,31,0.023,32,0.034,33,0.023,35,0.845,38,0.447,39,1.428,42,1.065,46,1.445,57,1.757,60,0.845,63,0.984,88,1.67,89,3.074,90,1.638,91,2.994,92,3.525,93,3.525,94,3.525,95,1.973,96,2.801,97,2.994,98,2.994,99,1.359,100,2.158,101,2.378,102,2.994,103,2.994,104,2.061,105,2.061,106,2.061,107,1.973,108,1.973,109,1.973,110,1.973,111,2.061,112,2.061,113,2.061,114,2.061,115,2.061,116,2.061,117,2.061,118,1.638,119,1.359,120,2.061,121,2.061,122,1.973,123,2.061,124,1.638,125,2.994,126,2.061,127,1.638]],["title/controllers/TasksController.html",[128,1.463,129,1.463]],["body/controllers/TasksController.html",[12,0.058,16,0.374,17,0.315,18,0.315,21,0.963,22,0.596,29,0.374,30,0.051,31,0.016,32,0.026,33,0.016,34,1.786,38,0.315,42,1.063,43,1.996,44,1.965,46,1.443,52,1.358,54,1.281,57,1.443,60,1.326,63,0.693,67,1.715,71,2.467,88,0.811,95,1.513,107,2.321,108,2.321,109,2.321,110,2.321,122,2.467,128,0.811,129,1.281,130,1.154,131,1.154,132,1.453,133,1.824,134,1.824,135,1.824,136,2.296,137,2.261,138,1.154,139,1.453,140,1.453,141,1.154,142,2.296,143,1.453,144,1.824,145,1.154,146,2.296,147,1.453,148,1.453,149,1.453,150,1.154,151,1.154,152,2.296,153,1.453,154,2.296,155,1.453,156,1.453,157,1.453,158,1.453,159,1.453,160,1.453,161,1.453,162,1.167,163,1.154,164,1.154,165,1.154,166,1.154,167,1.154,168,1.453,169,1.453,170,1.453,171,1.453,172,1.453,173,1.453,174,1.453,175,1.453,176,1.453,177,1.453,178,1.453,179,1.453,180,1.453,181,1.453,182,1.453,183,1.453,184,1.453,185,1.453,186,1.453]],["title/modules/TasksModule.html",[0,1.251,11,1.251]],["body/modules/TasksModule.html",[0,1.897,2,1.228,3,1.228,4,1.696,5,1.696,6,1.228,7,2.621,8,1.696,11,2.197,12,0.058,13,2.306,14,1.696,15,1.696,16,0.662,17,0.558,18,0.558,20,2.044,21,1.148,22,1.055,24,2.044,25,1.696,29,0.662,30,0.09,31,0.029,32,0.04,33,0.029,82,1.436,129,2.218,130,2.78,162,1.887,163,2.044,187,2.044,188,2.044,189,2.573,190,2.573,191,2.573,192,2.573]],["title/injectables/TasksService.html",[162,1.075,193,1.463]],["body/injectables/TasksService.html",[12,0.059,16,0.311,17,0.262,18,0.262,21,0.825,22,0.496,29,0.311,30,0.042,31,0.014,32,0.022,33,0.014,34,1.644,38,0.262,39,0.945,40,1.105,41,1.305,42,1.04,43,1.875,46,1.491,52,1.387,54,2.118,56,1.573,57,1.556,60,1.192,63,0.577,67,1.905,71,2.397,95,1.305,96,1.998,99,0.797,100,0.675,101,0.961,107,2.114,108,2.114,109,2.114,110,2.271,118,0.961,119,1.305,122,2.114,124,2.737,133,1.573,134,1.573,135,1.573,137,1.573,138,1.573,141,1.573,144,1.573,145,1.573,150,1.573,151,1.573,162,0.812,164,0.961,165,0.961,166,0.961,167,0.961,193,1.105,194,1.209,195,0.961,196,2.908,197,1.981,198,1.209,199,1.209,200,1.209,201,1.209,202,1.981,203,1.209,204,1.209,205,1.209,206,1.209,207,1.209,208,1.981,209,0.961,210,1.209,211,1.981,212,1.981,213,1.209,214,1.209,215,1.981,216,2.908,217,1.209,218,1.981,219,1.209,220,1.209,221,1.981,222,1.209,223,1.209,224,1.209,225,1.209]],["title/coverage.html",[226,2.336]],["body/coverage.html",[6,1.197,12,0.056,18,0.544,26,1.653,30,0.155,31,0.028,32,0.039,33,0.028,34,1.197,36,1.993,37,1.993,42,0.757,52,1.197,53,1.993,54,1.399,55,1.993,57,1.028,67,1.41,68,1.993,82,1.399,83,1.993,88,1.399,89,1.993,90,1.993,119,1.653,128,1.399,129,1.399,131,1.993,162,1.028,193,1.399,195,1.993,226,1.653,227,2.508,228,2.508,229,2.508,230,1.993,231,2.508,232,4.89,233,3.924,234,1.993,235,2.508,236,3.439,237,2.508,238,3.439,239,1.993,240,1.993,241,2.508,242,2.508,243,2.508,244,2.508]],["title/dependencies.html",[3,1.5,245,2.207]],["body/dependencies.html",[3,1.41,12,0.059,22,1.212,25,1.948,30,0.134,31,0.034,32,0.043,33,0.034,49,1.948,80,1.948,209,2.348,246,2.956,247,2.956,248,4.26,249,2.956,250,2.956,251,2.956,252,2.956,253,2.956,254,2.956,255,2.956,256,2.956,257,2.956,258,2.956,259,2.956,260,2.956,261,2.956,262,2.956,263,2.956,264,2.956,265,2.956,266,2.956]],["title/miscellaneous/enumerations.html",[267,0.905,268,2.498]],["body/miscellaneous/enumerations.html",[12,0.056,31,0.039,32,0.048,33,0.039,38,0.753,60,1.741,100,2.559,239,2.758,267,1.423,268,2.758,269,3.471,270,3.373,271,4.246,272,4.246]],["title/miscellaneous/functions.html",[267,0.905,273,2.498]],["body/miscellaneous/functions.html",[6,2.266,12,0.051,31,0.043,32,0.051,33,0.043,38,0.816,234,2.987,267,1.541,273,2.987,274,3.76]],["title/index.html",[38,0.479,275,2.207,276,2.207]],["body/index.html",[12,0.057,17,0.492,31,0.026,32,0.036,33,0.026,40,1.265,84,1.802,226,1.495,270,1.802,277,2.268,278,2.268,279,3.206,280,2.268,281,2.268,282,2.268,283,2.268,284,2.268,285,2.268,286,2.268,287,2.268,288,2.268,289,3.719,290,2.268,291,2.268,292,2.268,293,4.55,294,2.268,295,2.268,296,2.268,297,4.426,298,2.268,299,2.268,300,3.206,301,2.268,302,2.268,303,2.268,304,2.268,305,3.206,306,3.206,307,2.268,308,2.268,309,2.268,310,3.206,311,3.206,312,2.268,313,2.268,314,2.268,315,2.268,316,1.802,317,2.268,318,2.268,319,2.268,320,2.268,321,2.268,322,2.268,323,2.268,324,2.268,325,2.268,326,2.268,327,2.268,328,2.268,329,2.268,330,2.268,331,2.268,332,2.268,333,2.268,334,2.268]],["title/modules.html",[2,1.691]],["body/modules.html",[1,2.051,2,1.754,11,1.754,12,0.05,31,0.042,32,0.05,33,0.042,316,3.493,335,4.397,336,4.397,337,4.397]],["title/overview.html",[338,2.816]],["body/overview.html",[0,1.445,1,2.539,2,1.445,3,1.445,4,1.995,5,1.995,6,1.445,7,1.995,8,1.995,9,2.405,10,2.405,11,2.246,12,0.052,13,2.568,14,1.995,15,1.995,31,0.034,32,0.044,33,0.034,35,1.241,127,3.424,128,1.689,162,1.766,187,2.405,188,2.405,193,1.689,240,2.405,338,2.405,339,3.028,340,3.028]],["title/miscellaneous/variables.html",[267,0.905,341,2.498]],["body/miscellaneous/variables.html",[12,0.056,26,2.641,31,0.036,32,0.045,33,0.036,38,0.686,42,1.21,99,2.084,100,1.764,230,2.512,267,1.296,341,2.512,342,3.162,343,3.162,344,4.007,345,3.162,346,3.162,347,3.162,348,3.162,349,3.162,350,3.162,351,3.162,352,3.162,353,3.162,354,3.162,355,3.162,356,3.162,357,3.162,358,3.162]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["0.2.25",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":127,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"overview.html":{}}}],["1.1.11",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":339,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":340,"title":{},"body":{"overview.html":{}}}],["5432",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.5.4",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowedstatus",{"_index":94,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["amazing",{"_index":317,"title":{},"body":{"index.html":{}}}],["angular",{"_index":288,"title":{},"body":{"index.html":{}}}],["app",{"_index":295,"title":{},"body":{"index.html":{}}}],["applications",{"_index":285,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":327,"title":{},"body":{"index.html":{}}}],["backers",{"_index":318,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":114,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["badrequestexception(`'${value",{"_index":120,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["baseentity",{"_index":70,"title":{},"body":{"classes/Task.html":{}}}],["body",{"_index":155,"title":{},"body":{"controllers/TasksController.html":{}}}],["body('status',taskstatusvalidationpipe",{"_index":185,"title":{},"body":{"controllers/TasksController.html":{}}}],["boolean",{"_index":111,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":337,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":335,"title":{},"body":{"modules.html":{}}}],["building",{"_index":280,"title":{},"body":{"index.html":{}}}],["class",{"_index":30,"title":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidationPipe.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":35,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidationPipe.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":187,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":188,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["column",{"_index":72,"title":{},"body":{"classes/Task.html":{}}}],["compodoc/compodoc",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["config/typeorm.config",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('created",{"_index":225,"title":{},"body":{"injectables/TasksService.html":{}}}],["const",{"_index":124,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{}}}],["constructor(private",{"_index":171,"title":{},"body":{"controllers/TasksController.html":{}}}],["controller",{"_index":128,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('tasks",{"_index":170,"title":{},"body":{"controllers/TasksController.html":{}}}],["controllers",{"_index":130,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["coverage",{"_index":226,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createtask",{"_index":133,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["createtask(@body",{"_index":182,"title":{},"body":{"controllers/TasksController.html":{}}}],["createtask(createtaskdto",{"_index":138,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["createtaskdto",{"_index":34,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["database",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decorators",{"_index":44,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"controllers/TasksController.html":{}}}],["default",{"_index":99,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":46,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["delete",{"_index":157,"title":{},"body":{"controllers/TasksController.html":{}}}],["delete('/:id",{"_index":142,"title":{},"body":{"controllers/TasksController.html":{}}}],["deletetaskbyid",{"_index":134,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["deletetaskbyid(@param('id",{"_index":179,"title":{},"body":{"controllers/TasksController.html":{}}}],["deletetaskbyid(id",{"_index":141,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":40,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/Task.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["description:string",{"_index":51,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["development",{"_index":296,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dto/create",{"_index":164,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["dto/get",{"_index":166,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["e2e",{"_index":307,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":281,"title":{},"body":{"index.html":{}}}],["entities",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":79,"title":{},"body":{"classes/Task.html":{}}}],["entity.{js,ts",{"_index":356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityrepository(task",{"_index":87,"title":{},"body":{"classes/TaskRepository.html":{}}}],["enumerations",{"_index":268,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["export",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["express",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":69,"title":{},"body":{"classes/Task.html":{},"classes/TaskRepository.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["filter.dto",{"_index":167,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["filter.dto.ts",{"_index":55,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"coverage.html":{}}}],["filter.dto.ts:11",{"_index":59,"title":{},"body":{"classes/GetTasksFilterDto.html":{}}}],["filter.dto.ts:7",{"_index":62,"title":{},"body":{"classes/GetTasksFilterDto.html":{}}}],["filterdto",{"_index":150,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["filterdto:gettasksfilterdto",{"_index":173,"title":{},"body":{"controllers/TasksController.html":{}}}],["found",{"_index":216,"title":{},"body":{"injectables/TasksService.html":{}}}],["found.id",{"_index":223,"title":{},"body":{"injectables/TasksService.html":{}}}],["framework",{"_index":279,"title":{},"body":{"index.html":{}}}],["function",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":273,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":146,"title":{},"body":{"controllers/TasksController.html":{}}}],["getalltasks",{"_index":196,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettaskbyid",{"_index":135,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettaskbyid(@param('id",{"_index":177,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettaskbyid(id",{"_index":145,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettasks",{"_index":136,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettasks(@query(validationpipe",{"_index":172,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettasks(filterdto",{"_index":148,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettasksfilterdto",{"_index":52,"title":{"classes/GetTasksFilterDto.html":{}},"body":{"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["gettaskswithfilters",{"_index":197,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettaskswithfilters(filterdto",{"_index":202,"title":{},"body":{"injectables/TasksService.html":{}}}],["getting",{"_index":275,"title":{"index.html":{}},"body":{}}],["grow",{"_index":313,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":286,"title":{},"body":{"index.html":{}}}],["here",{"_index":324,"title":{},"body":{"index.html":{}}}],["host",{"_index":345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":331,"title":{},"body":{"index.html":{}}}],["id",{"_index":71,"title":{},"body":{"classes/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["identifier",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":125,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["if(!found",{"_index":219,"title":{},"body":{"injectables/TasksService.html":{}}}],["if(!this.isstatusvalid(value",{"_index":117,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["if(object.keys(filterdto).length",{"_index":174,"title":{},"body":{"controllers/TasksController.html":{}}}],["implements",{"_index":91,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["import",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["in_progress",{"_index":271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":38,"title":{"index.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["injectable",{"_index":193,"title":{"injectables/TasksService.html":{}},"body":{"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":194,"title":{},"body":{"injectables/TasksService.html":{}}}],["inspired",{"_index":287,"title":{},"body":{"index.html":{}}}],["installation",{"_index":292,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":294,"title":{},"body":{"index.html":{}}}],["interface",{"_index":240,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":121,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["isin",{"_index":65,"title":{},"body":{"classes/GetTasksFilterDto.html":{}}}],["isin([taskstatus.open,taskstatus.in_progress,taskstatus.done",{"_index":66,"title":{},"body":{"classes/GetTasksFilterDto.html":{}}}],["isnotempty",{"_index":45,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{}}}],["isoptional",{"_index":64,"title":{},"body":{"classes/GetTasksFilterDto.html":{}}}],["isoptional()@isin(undefined",{"_index":61,"title":{},"body":{"classes/GetTasksFilterDto.html":{}}}],["isoptional()@isnotempty",{"_index":58,"title":{},"body":{"classes/GetTasksFilterDto.html":{}}}],["isstatusvalid",{"_index":97,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["isstatusvalid(status",{"_index":105,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["isstatusvalid(status:any",{"_index":123,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["join",{"_index":320,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":328,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["license",{"_index":334,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":311,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":95,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["miscellaneous",{"_index":267,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":310,"title":{},"body":{"index.html":{}}}],["mode",{"_index":300,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":323,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":329,"title":{},"body":{"index.html":{}}}],["name",{"_index":108,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["nest",{"_index":289,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":333,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["new",{"_index":119,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["node.js",{"_index":278,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":206,"title":{},"body":{"injectables/TasksService.html":{}}}],["notfoundexception(`task",{"_index":220,"title":{},"body":{"injectables/TasksService.html":{}}}],["npm",{"_index":293,"title":{},"body":{"index.html":{}}}],["number",{"_index":74,"title":{},"body":{"classes/Task.html":{}}}],["open",{"_index":270,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["optional",{"_index":109,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["overview",{"_index":338,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":245,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":156,"title":{},"body":{"controllers/TasksController.html":{}}}],["param('id",{"_index":184,"title":{},"body":{"controllers/TasksController.html":{}}}],["parameters",{"_index":107,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["password",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":158,"title":{},"body":{"controllers/TasksController.html":{}}}],["patch('/:id/status",{"_index":152,"title":{},"body":{"controllers/TasksController.html":{}}}],["pg",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["pipes/task",{"_index":168,"title":{},"body":{"controllers/TasksController.html":{}}}],["pipetransform",{"_index":92,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["please",{"_index":321,"title":{},"body":{"index.html":{}}}],["port",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":154,"title":{},"body":{"controllers/TasksController.html":{}}}],["post()@usepipes(validationpipe",{"_index":139,"title":{},"body":{"controllers/TasksController.html":{}}}],["postgres",{"_index":344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":132,"title":{},"body":{"controllers/TasksController.html":{}}}],["primarygeneratedcolumn",{"_index":75,"title":{},"body":{"classes/Task.html":{}}}],["private",{"_index":96,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{}}}],["production",{"_index":302,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":277,"title":{},"body":{"index.html":{}}}],["project",{"_index":312,"title":{},"body":{"index.html":{}}}],["properties",{"_index":39,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["query",{"_index":159,"title":{},"body":{"controllers/TasksController.html":{}}}],["read",{"_index":322,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":93,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["reflect",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":84,"title":{},"body":{"classes/TaskRepository.html":{},"index.html":{}}}],["repository,entityrepository",{"_index":85,"title":{},"body":{"classes/TaskRepository.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["result",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":122,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["returns",{"_index":110,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["rimraf",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":297,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["sa123456",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalable",{"_index":282,"title":{},"body":{"index.html":{}}}],["search",{"_index":56,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"injectables/TasksService.html":{}}}],["server",{"_index":283,"title":{},"body":{"index.html":{}}}],["side",{"_index":284,"title":{},"body":{"index.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["sponsors",{"_index":315,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":274,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task.model.ts",{"_index":269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../typeorm.config.ts",{"_index":342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/typeorm.config.ts",{"_index":230,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":234,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tasks/dto/create",{"_index":36,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/tasks/dto/get",{"_index":53,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"coverage.html":{}}}],["src/tasks/pipes/task",{"_index":89,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"coverage.html":{}}}],["src/tasks/task.entity.ts",{"_index":68,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["src/tasks/task.entity.ts:10",{"_index":78,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/task.entity.ts:13",{"_index":73,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/task.entity.ts:16",{"_index":77,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/task.entity.ts:7",{"_index":76,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/task.model.ts",{"_index":239,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/tasks/task.repository.ts",{"_index":83,"title":{},"body":{"classes/TaskRepository.html":{},"coverage.html":{}}}],["src/tasks/tasks.controller.ts",{"_index":131,"title":{},"body":{"controllers/TasksController.html":{},"coverage.html":{}}}],["src/tasks/tasks.controller.ts:16",{"_index":149,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:25",{"_index":147,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:30",{"_index":143,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:36",{"_index":140,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:40",{"_index":153,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.module.ts",{"_index":189,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/tasks/tasks.service.ts",{"_index":195,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["src/tasks/tasks.service.ts:11",{"_index":203,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:25",{"_index":200,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:29",{"_index":201,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:36",{"_index":199,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:40",{"_index":204,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:45",{"_index":198,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:9",{"_index":205,"title":{},"body":{"injectables/TasksService.html":{}}}],["start",{"_index":298,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":301,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":303,"title":{},"body":{"index.html":{}}}],["started",{"_index":276,"title":{"index.html":{}},"body":{}}],["starter",{"_index":291,"title":{},"body":{"index.html":{}}}],["statements",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":57,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["status:taskstatus",{"_index":81,"title":{},"body":{"classes/Task.html":{}}}],["stay",{"_index":325,"title":{},"body":{"index.html":{}}}],["string",{"_index":43,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["support",{"_index":316,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":336,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":67,"title":{"classes/Task.html":{}},"body":{"classes/Task.html":{},"classes/TaskRepository.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["task.description.includes(search",{"_index":214,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.dto",{"_index":165,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["task.dto.ts",{"_index":37,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:5",{"_index":48,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:8",{"_index":47,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.entity",{"_index":86,"title":{},"body":{"classes/TaskRepository.html":{}}}],["task.id",{"_index":218,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.model",{"_index":63,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["task.repository",{"_index":191,"title":{},"body":{"modules/TasksModule.html":{}}}],["task.status",{"_index":212,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.title.includes(search",{"_index":213,"title":{},"body":{"injectables/TasksService.html":{}}}],["taskmangement",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskrepository",{"_index":82,"title":{"classes/TaskRepository.html":{}},"body":{"classes/TaskRepository.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["tasks",{"_index":54,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["tasks.controller",{"_index":190,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.filter(task",{"_index":211,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks.service",{"_index":163,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/tasks.module",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["taskscontroller",{"_index":129,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["tasksmodule",{"_index":11,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":162,"title":{"injectables/TasksService.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["taskstatus",{"_index":60,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{}}}],["taskstatus.done",{"_index":103,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["taskstatus.in_progress",{"_index":102,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["taskstatus.open",{"_index":101,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{}}}],["taskstatusvalidationpipe",{"_index":88,"title":{"classes/TaskStatusValidationPipe.html":{}},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"coverage.html":{}}}],["test",{"_index":306,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":309,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":308,"title":{},"body":{"index.html":{}}}],["tests",{"_index":305,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":314,"title":{},"body":{"index.html":{}}}],["this.allowedstatus.indexof(status",{"_index":126,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["this.getalltasks",{"_index":210,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.gettaskbyid(id",{"_index":221,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks",{"_index":215,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.filter(task",{"_index":222,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.find(task",{"_index":217,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.push(task",{"_index":224,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasksservice.createtask(createtaskdto",{"_index":183,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.deletetaskbyid(id",{"_index":180,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.getalltasks",{"_index":176,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.gettaskbyid(id",{"_index":178,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.gettaskswithfilters(filterdto",{"_index":175,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.updatetaskstatus(id",{"_index":186,"title":{},"body":{"controllers/TasksController.html":{}}}],["throw",{"_index":118,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{}}}],["title",{"_index":41,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/Task.html":{},"injectables/TasksService.html":{}}}],["title:string",{"_index":50,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["touch",{"_index":326,"title":{},"body":{"index.html":{}}}],["transform",{"_index":98,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["transform(value",{"_index":112,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["transform(value:any",{"_index":115,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["transformer",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitter",{"_index":332,"title":{},"body":{"index.html":{}}}],["type",{"_index":42,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"classes/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":80,"title":{},"body":{"classes/Task.html":{},"classes/TaskRepository.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["typeormmodule.forfeature([taskrepository",{"_index":192,"title":{},"body":{"modules/TasksModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":290,"title":{},"body":{"index.html":{}}}],["unit",{"_index":304,"title":{},"body":{"index.html":{}}}],["updatetaskstatus",{"_index":137,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["updatetaskstatus(id",{"_index":151,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["usepipes",{"_index":160,"title":{},"body":{"controllers/TasksController.html":{}}}],["usepipes(validationpipe",{"_index":181,"title":{},"body":{"controllers/TasksController.html":{}}}],["username",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uuid",{"_index":209,"title":{},"body":{"injectables/TasksService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":208,"title":{},"body":{"injectables/TasksService.html":{}}}],["v4",{"_index":207,"title":{},"body":{"injectables/TasksService.html":{}}}],["validation.pipe",{"_index":169,"title":{},"body":{"controllers/TasksController.html":{}}}],["validation.pipe.ts",{"_index":90,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:11",{"_index":113,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["validation.pipe.ts:20",{"_index":106,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["validation.pipe.ts:5",{"_index":104,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["validationpipe",{"_index":161,"title":{},"body":{"controllers/TasksController.html":{}}}],["validator",{"_index":49,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"dependencies.html":{}}}],["value",{"_index":100,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.touppercase",{"_index":116,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["variable",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":341,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":144,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["watch",{"_index":299,"title":{},"body":{"index.html":{}}}],["website",{"_index":330,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":319,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            TasksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksModule } from './tasks/tasks.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { typeOrmConfig } from './config/typeorm.config';\n\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(typeOrmConfig),\n    TasksModule],\n  providers: [],\n})\n\n\n\n\n\n\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/create-task.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/create-task.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/create-task.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsNotEmpty} from 'class-validator';\n\nexport class CreateTaskDto{\n    @IsNotEmpty()\n    title:string;\n\n    @IsNotEmpty()\n    description:string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetTasksFilterDto.html":{"url":"classes/GetTasksFilterDto.html","title":"class - GetTasksFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetTasksFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/get-tasks-filter.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/get-tasks-filter.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskStatus\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsIn(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/get-tasks-filter.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TaskStatus } from \"../task.model\";\nimport { IsOptional, IsIn, IsNotEmpty } from \"class-validator\";\n\nexport class GetTasksFilterDto {\n    @IsOptional()\n    @IsIn([TaskStatus.OPEN,TaskStatus.IN_PROGRESS,TaskStatus.DONE])\n    status: TaskStatus;\n\n    @IsOptional()\n    @IsNotEmpty()\n    search: string;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/task.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/task.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskStatus\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/task.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/task.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\nimport { TaskStatus } from './task.model';\n\n@Entity()\nexport class Task extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    title: string;\n\n    @Column()\n    description: string;\n\n    @Column()\n    status:TaskStatus;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskRepository.html":{"url":"classes/TaskRepository.html","title":"class - TaskRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/task.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Repository,EntityRepository } from \"typeorm\";\nimport { Task } from \"./task.entity\";\n\n\n@EntityRepository(Task)\nexport class TaskRepository extends Repository{\n    \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskStatusValidationPipe.html":{"url":"classes/TaskStatusValidationPipe.html","title":"class - TaskStatusValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskStatusValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/pipes/task-status-validation.pipe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isStatusValid\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            allowedStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        TaskStatus.OPEN,\n        TaskStatus.IN_PROGRESS,\n        TaskStatus.DONE\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/pipes/task-status-validation.pipe.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isStatusValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isStatusValid(status: any)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/pipes/task-status-validation.pipe.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/pipes/task-status-validation.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PipeTransform, BadRequestException } from \"@nestjs/common\";\nimport { TaskStatus } from \"../task.model\";\n\nexport class TaskStatusValidationPipe implements PipeTransform{\n    readonly allowedStatus = [\n        TaskStatus.OPEN,\n        TaskStatus.IN_PROGRESS,\n        TaskStatus.DONE\n    ];\n\n    transform(value:any){\n        value = value.toUpperCase();\n\n        if(!this.isStatusValid(value)){\n            throw new BadRequestException(`'${value}' is an invalid status`);\n        }\n        return value;\n    }\n\n    private isStatusValid(status:any){\n        const idx = this.allowedStatus.indexOf(status);\n        return idx !== -1;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTaskById\n                            \n                            \n                                getTaskById\n                            \n                            \n                                getTasks\n                            \n                            \n                                updateTaskStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTask\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTask(createTaskDto: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTaskDto\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTaskById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTaskById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaskById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetTasks(filterDto: GetTasksFilterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                GetTasksFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTaskStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTaskStatus(id: string, status: TaskStatus)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id/status')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                TaskStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Delete, Patch, Query, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { TasksService } from './tasks.service';\nimport { Task, TaskStatus } from './task.model';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { GetTasksFilterDto } from './dto/get-tasks-filter.dto';\nimport { TaskStatusValidationPipe } from './pipes/task-status-validation.pipe';\n\n@Controller('tasks')\nexport class TasksController {\n\n    constructor(private tasksService: TasksService) {\n\n    }\n\n    @Get()\n    getTasks(@Query(ValidationPipe) filterDto:GetTasksFilterDto): Task[] {\n       if(Object.keys(filterDto).length){\n           return this.tasksService.getTasksWithFilters(filterDto)\n       }else{\n        return this.tasksService.getAllTasks();\n       }\n    }\n\n    @Get('/:id')\n    getTaskById(@Param('id') id: string): Task {\n        return this.tasksService.getTaskById(id);\n    }\n\n    @Delete('/:id')\n    deleteTaskById(@Param('id') id: string): void {\n        return this.tasksService.deleteTaskById(id);\n    }\n\n    @Post()\n    @UsePipes(ValidationPipe)\n    createTask(@Body() createTaskDto: CreateTaskDto): Task {\n        return this.tasksService.createTask(createTaskDto);\n    }\n    @Patch('/:id/status')\n    updateTaskStatus(\n        @Param('id') id: string,\n        @Body('status',TaskStatusValidationPipe) status: TaskStatus\n    ): Task {\n        return this.tasksService.updateTaskStatus(id, status);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService\n\nTasksService\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksController } from './tasks.controller';\nimport { TasksService } from './tasks.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TaskRepository } from './task.repository';\n\n@Module({\n  imports:[\n    TypeOrmModule.forFeature([TaskRepository])\n  ],\n  controllers: [TasksController],\n  providers: [TasksService]\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTaskById\n                            \n                            \n                                getAllTasks\n                            \n                            \n                                getTaskById\n                            \n                            \n                                getTasksWithFilters\n                            \n                            \n                                updateTaskStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTask\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTask(createTaskDto: CreateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTaskDto\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTaskById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTaskById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Task[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaskById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTasksWithFilters\n                        \n                        \n                    \n                \n            \n            \n                \ngetTasksWithFilters(filterDto: GetTasksFilterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                GetTasksFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTaskStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTaskStatus(id: string, status: TaskStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                TaskStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/tasks.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Task, TaskStatus } from './task.model';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { GetTasksFilterDto } from './dto/get-tasks-filter.dto';\n\n@Injectable()\nexport class TasksService {\n    private tasks: Task[] = [];\n\n    getTasksWithFilters(filterDto: GetTasksFilterDto): Task[] {\n\n        const { status, search } = filterDto;\n        let tasks = this.getAllTasks();\n        if (status) {\n            tasks = tasks.filter(task => task.status === status);\n        }\n\n        if (search) {\n            tasks = tasks.filter(task => task.title.includes(search) ||\n                task.description.includes(search));\n        }\n        return tasks;\n    }\n    getAllTasks(): Task[] {\n        return this.tasks;\n    }\n\n    getTaskById(id: string): Task {\n        const found =  this.tasks.find(task => task.id === id);\n        if(!found){\n            throw new NotFoundException(`Task with ID: ${id} not found`);\n        }\n        return found;\n    }\n    deleteTaskById(id: string): void {\n        const found = this.getTaskById(id); \n        this.tasks = this.tasks.filter(task => task.id !== found.id);\n    }\n    updateTaskStatus(id: string, status: TaskStatus): Task {\n        const task = this.getTaskById(id);\n        task.status = status;\n        return task;\n    }\n    createTask(createTaskDto: CreateTaskDto): Task {\n        const { title, description } = createTaskDto;\n\n        const task: Task = {\n            id: uuidv4(),\n            title,\n            description,\n            status: TaskStatus.OPEN\n        }\n        this.tasks.push(task);\n        console.log('Created new task', task)\n        return task;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            typeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/dto/get-tasks-filter.dto.ts\n            \n            class\n            GetTasksFilterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/pipes/task-status-validation.pipe.ts\n            \n            class\n            TaskStatusValidationPipe\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tasks/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tasks/task.model.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tasks/task.repository.ts\n            \n            class\n            TaskRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            controller\n            TasksController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/typeorm : ^7.1.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            pg : ^8.2.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            typeorm : ^0.2.25\n        \n            uuid : ^8.1.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskStatus   (src/.../task.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tasks/task.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                Value : OPEN\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 DONE\n                            \n                        \n                        \n                            \n                                Value : DONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            typeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/typeorm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            typeOrmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: 'postgres',\n    host: 'localhost',\n    port: 5432,\n    username: 'postgres',\n    password: 'sa123456#',\n    database: 'taskmangement',\n    entities: [__dirname + '/../**/*.entity.{js,ts}'],\n    synchronize: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
